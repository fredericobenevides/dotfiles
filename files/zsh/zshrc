# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="fredericobenevides"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(brew bundler docker docker-compose docker-machine flutter gem git kubectl node npm oc pip postgres python fredericobenevides myutils)

#source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export PATH=$HOME/bin:/usr/local/bin:$PATH


export EDITOR='emacs'
export VISUAL='emacs'

alias docker_env_dev='eval $(docker-machine env dev)'
alias minishift_docker_env='eval $(minishift docker-env)'
alias minishift_oc_env='eval $(minishift oc-env)'

alias vim='nvim'

alias flutter_devtools='flutter pub global run devtools'




### ANACONDA
if [[ -d "/opt/anaconda3" ]]; then
  __conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
          . "/opt/anaconda3/etc/profile.d/conda.sh"
      else
          export PATH="/opt/anaconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
fi



### Android Studio
if [[ -d '/opt/Android/android-studio' ]]; then
  export ANDROID_HOME="/opt/Android/android-studio"
  export ANDROID_SDK_ROOT="/opt/Android/Sdk"
  export PATH="$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/emulator:$PATH"
fi




### Flutter
if [[ -d '/opt/flutter' ]]; then
  export FLUTTER_HOME="/opt/flutter"
  export FLUTTER_PUB_CACHE="/opt/flutter/.pub-cache"
  export DART_HOME=/opt/flutter/bin/cache/dart-sdk

  export PATH="$DART_HOME/bin:$FLUTTER_PUB_CACHE/bin:$FLUTTER_HOME/bin:$PATH"
fi




### FZF
export PATH="$PATH:$HOME/.fzf/bin"
export MANPATH="$MANPATH:$HOME/.fzf/man"
source "$HOME/.fzf/shell/completion.zsh" 2> /dev/null
source "$HOME/.fzf/shell/key-bindings.zsh"
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git --ignore node_modules -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_COMPLETION_TRIGGER='~~'




### NODE
export PATH="$HOME/.npm-global/bin:$PATH"

if [[ -d "/opt/node" ]]; then
  export PATH="/opt/node/bin:$PATH"
fi
source /usr/share/nvm/init-nvm.sh




### PYTHON
export PYTHONSTARTUP="$HOME/.pythonrc"




### RBENV
export RBENV_ROOT="${HOME}/.rbenv"

if [[ -d "${RBENV_ROOT}" ]]; then
  export PATH="${RBENV_ROOT}/bin:${PATH}"
  eval "$(rbenv init -)"
fi




### RUST
if [[ -d "$HOME/.cargo/bin" ]]; then
  export PATH="$HOME/.cargo/bin:$PATH"
fi



### SNAP
if [[ -d /usr/lib/snapd ]]; then
  export PATH="/var/lib/snapd/snap/bin:${PATH}"
fi




### TMUX
# Work around when opening tmux to set the new environment to fix the colors
export TERM="xterm-256color"
if [ "$TMUX" ] && [ $TERM = "xterm-256color" ]; then
  export TERM="screen-256color"
fi




### SDKMAN
export SDKMAN_DIR="/opt/sdkman"
[[ -s "/opt/sdkman/bin/sdkman-init.sh" ]] && source "/opt/sdkman/bin/sdkman-init.sh"




# Load local scripts
export PATH="$HOME/.local_scripts:$PATH"

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

# Load local environment
if [ -f $HOME/.zshrc.local ]; then
  source $HOME/.zshrc.local
fi

